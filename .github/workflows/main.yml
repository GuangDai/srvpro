name: Docker Publish

# 工作流触发条件
on:
  push:
    branches:
      - '**' # 任何分支的推送
    tags:
      - 'v*.*.*' # 版本标签的推送
  pull_request:
    branches:
      - 'master' # 针对 master 分支的 PR

# 环境变量，定义你的 Docker Hub 镜像名称
env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}

jobs:
  # --- 构建任务 ---
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # ** FIX: Define platforms and a short 'arch' name for each **
        # This avoids using the 'replace' function and makes the code cleaner
        include:
          - platform: linux/amd64
            arch: amd64
          - platform: linux/arm64
            arch: arm64
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata and generate tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          # ** FIX: Use the 'matrix.arch' variable for the suffix **
          tags: |
            type=ref,event=branch,suffix=-{{matrix.arch}}-lite,enable={{ !startsWith(github.ref, 'refs/tags/') }}
            type=ref,event=branch,suffix=-{{matrix.arch}}-full,enable={{ !startsWith(github.ref, 'refs/tags/') }}
            type=ref,event=tag,suffix=-{{matrix.arch}}-lite
            type=ref,event=tag,suffix=-{{matrix.arch}}-full

      - name: Build and push 'lite' image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.lite
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # ** FIX: Use the correct 'matrix.arch' variable **
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:${{ matrix.arch }}-lite-buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:${{ matrix.arch }}-lite-buildcache,mode=max
          # (Optional) If you need the GIT_CLONE_TOKEN secret, uncomment and add it here
          # build-args: |
          #   GIT_CLONE_TOKEN=${{ secrets.GIT_CLONE_TOKEN }}

      - name: Build and push 'full' image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          # ** FIX: Use the correct 'matrix.arch' variable **
          build-args: |
            BASE_IMAGE=${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}-${{ matrix.arch }}-lite
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # ** FIX: Use the correct 'matrix.arch' variable **
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:${{ matrix.arch }}-full-buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:${{ matrix.arch }}-full-buildcache,mode=max

  # --- 部署任务 ---
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get branch/tag name
        id: get_name
        run: echo "ref_name=$(echo ${{ github.ref_name }} | sed -e 's/[^a-zA-Z0-9.-]/-/g')" >> $GITHUB_ENV

      - name: Create and push 'lite' manifest
        run: |
          docker manifest create ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-lite \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-amd64-lite \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-arm64-lite
          docker manifest push ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-lite

      - name: Create and push 'full' & branch manifest
        run: |
          docker manifest create ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-full \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-amd64-full \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-arm64-full
          docker manifest push ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-full
          docker manifest push ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}

      - name: Create and push 'latest-lite' manifest
        if: github.ref == 'refs/heads/master'
        run: |
          docker manifest create ${{ env.DOCKER_IMAGE }}:lite \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-amd64-lite \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-arm64-lite
          docker manifest push ${{ env.DOCKER_IMAGE }}:lite

      - name: Create and push 'latest-full' & 'latest' manifest
        if: github.ref == 'refs/heads/master'
        run: |
          docker manifest create ${{ env.DOCKER_IMAGE }}:full \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-amd64-full \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-arm64-full
          docker manifest push ${{ env.DOCKER_IMAGE }}:full
          docker manifest push ${{ env.DOCKER_IMAGE }}:latest
