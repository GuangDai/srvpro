name: Docker Publish

# Workflow triggers
on:
  push:
    branches:
      - '**' # Any branch push
    tags:
      - 'v*.*.*' # Any version tag push
  pull_request:
    branches:
      - 'master' # PRs targeting master

# Environment variables
env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}

jobs:

  # ===================================================================
  # AMD64 (x86) BUILD TRACK
  # ===================================================================
  build-lite-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU & Buildx
        uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata for amd64-lite
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch,suffix=-amd64-lite
            type=ref,event=tag,suffix=-amd64-lite
      - name: Build and push amd64-lite image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.lite
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:amd64-lite-buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:amd64-lite-buildcache,mode=max

  build-full-amd64:
    runs-on: ubuntu-latest
    needs: build-lite-amd64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU & Buildx
        uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata for amd64-full
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch,suffix=-amd64-full
            type=ref,event=tag,suffix=-amd64-full
      - name: Build and push amd64-full image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          build-args: |
            BASE_IMAGE=${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}-amd64-lite
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:amd64-full-buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:amd64-full-buildcache,mode=max

  # ===================================================================
  # ARM64 BUILD TRACK
  # ===================================================================
  build-lite-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU & Buildx
        uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata for arm64-lite
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch,suffix=-arm64-lite
            type=ref,event=tag,suffix=-arm64-lite
      - name: Build and push arm64-lite image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.lite
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:arm64-lite-buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:arm64-lite-buildcache,mode=max

  build-full-arm64:
    runs-on: ubuntu-latest
    needs: build-lite-arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU & Buildx
        uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata for arm64-full
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch,suffix=-arm64-full
            type=ref,event=tag,suffix=-arm64-full
      - name: Build and push arm64-full image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          build-args: |
            BASE_IMAGE=${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}-arm64-lite
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:arm64-full-buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:arm64-full-buildcache,mode=max

  # ===================================================================
  # FINAL DEPLOY JOB
  # ===================================================================
  deploy:
    runs-on: ubuntu-latest
    needs: [build-full-amd64, build-full-arm64] # Waits for both tracks to finish
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get sanitized branch/tag name
        id: get_name
        run: echo "ref_name=$(echo ${{ github.ref_name }} | sed -e 's/[^a-zA-Z0-9.-]/-/g')" >> $GITHUB_ENV
      - name: Create and push 'lite' manifest
        run: |
          docker manifest create ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-lite \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-amd64-lite \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-arm64-lite
          docker manifest push ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-lite
      - name: Create and push 'full' & branch manifest
        run: |
          docker manifest create ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-full \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-amd64-full \
            ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-arm64-full
          docker manifest push ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}-full
          docker manifest push ${{ env.DOCKER_IMAGE }}:${{ env.ref_name }}
      - name: Create and push 'latest-lite' manifest
        if: github.ref == 'refs/heads/master'
        run: |
          docker manifest create ${{ env.DOCKER_IMAGE }}:lite \
            ${{ env.DOCKER_IMAGE }}:master-amd64-lite \
            ${{ env.DOCKER_IMAGE }}:master-arm64-lite
          docker manifest push ${{ env.DOCKER_IMAGE }}:lite
      - name: Create and push 'latest-full' & 'latest' manifest
        if: github.ref == 'refs/heads/master'
        run: |
          docker manifest create ${{ env.DOCKER_IMAGE }}:full \
            ${{ env.DOCKER_IMAGE }}:master-amd64-full \
            ${{ env.DOCKER_IMAGE }}:master-arm64-full
          docker manifest push ${{ env.DOCKER_IMAGE }}:full
          docker manifest push ${{ env.DOCKER_IMAGE }}:latest
